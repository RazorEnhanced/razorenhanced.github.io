# This is a basic workflow that is manually triggered

name: AutoDoc API

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
  push:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  rebuild_docs:
    runs-on: windows-latest
    
    steps:
    # Checkout the repository first
    - name: Checkout website repo
      uses: actions/checkout@v3
      with:
        repository: RazorEnhanced-UO/razorenhanced.github.io
        path: website_repo
    
    # Get the latest zip file directly from the repository
    - name: Find latest release file
      id: find_zip
      run: |
        # Navigate to releases directory
        cd website_repo/releases
        
        # Get the latest zip file by last modified date
        $latestZip = Get-ChildItem -Filter "RazorEnhanced-*.zip" | 
                     Where-Object { $_.Name -ne "RazorEnhanced-latest.zip" } |
                     Sort-Object -Property LastWriteTime -Descending | 
                     Select-Object -First 1
        
        if ($latestZip) {
          $zipPath = (Get-Item $latestZip.FullName).FullName
          Write-Host "Found latest release: $($latestZip.Name)"
          echo "zip_path=$zipPath" >> $env:GITHUB_OUTPUT
        } else {
          Write-Error "No release zip files found in the releases directory"
          exit 1
        }
      shell: pwsh
      
    # Extract the zip file
    - name: Extract the latest release
      run: |
        Write-Host "Extracting: ${{ steps.find_zip.outputs.zip_path }}"
        7z x "${{ steps.find_zip.outputs.zip_path }}" -o"./extracted"
      shell: pwsh
      
    - name: Display extracted files
      run: dir extracted
  
    # Try to run directly   
    - name: Run RE to trigger the creation of AutoComplete.json
      run: |
        cd extracted
        RazorEnhanced.exe --autoDocsOnly
        dir Config
      shell: cmd
    
    - name: Display directories
      run: dir extracted/Config/
      
    # Build Docs (use the AutoDoc.py file from the repository)
    - name: Run autodoc.py
      run: |
        cd extracted
        # Copy AutoDoc.py from the repository
        Copy-Item "../website_repo/doc/autodoc.py" -Destination "."
        # Run AutoDoc
        python autodoc.py
      shell: pwsh
    
    # Copy generated docs to the repository
    - name: Update repo documentation
      run: |
        Copy-Item -Path "extracted/doc/*" -Destination "website_repo/doc/" -Recurse -Force -Verbose
      shell: pwsh
    
    # Add, commit & push
    - name: Add, Commit & push
      uses: EndBug/add-and-commit@v9
      with:
        message: "GitHub Actions build_docs"
        github_token: "${{ secrets.GITHUB_TOKEN }}"
        cwd: './website_repo'
        pathspec_error_handling: exitImmediately
        push: true